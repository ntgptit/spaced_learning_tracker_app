# üì± DANH S√ÅCH TO√ÄN DI·ªÜN WIDGET D√ôNG CHUNG ‚Äì PREFIX `Slt`

## üìã M·ª•c l·ª•c
- [UI State Widgets](#-1-ui-state-widgets)
- [Dialog Widgets](#-2-dialog-widgets)
- [Form Input Widgets](#-3-form-input-widgets)
- [Button Widgets](#-4-button-widgets)
- [Card & Tile Widgets](#-5-card--tile-widgets)
- [List / Table Widgets](#-6-list--table-widgets)
- [Filter / Search Widgets](#-7-filter--search-widgets)
- [Common Layout Widgets](#-8-common-layout-widgets)
- [Media & Image Widgets](#-9-media--image-widgets)
- [Navigation & Bottom Bar Widgets](#-10-navigation--bottom-bar-widgets)
- [Animation & Transition Widgets](#-11-animation--transition-widgets)
- [Chart & Analytics Widgets](#-12-chart--analytics-widgets)
- [Permission & Auth Widgets](#-13-permission--auth-widgets)
- [Service Widgets](#-14-service-widgets)
- [Theme, Constants, Utilities](#%EF%B8%8F-15-theme-constants-utilities)
- [Clean Architecture Components](#-16-clean-architecture-components)
- [Testing Utilities](#-17-testing-utilities)

---

## üü¶ 1. **UI State Widgets**

| Class                        | M·ª•c ƒë√≠ch                   |
| ---------------------------- | -------------------------- |
| `SltLoadingStateWidget`      | Hi·ªÉn th·ªã loading trung t√¢m |
| `SltErrorStateWidget`        | Hi·ªÉn th·ªã l·ªói + retry       |
| `SltEmptyStateWidget`        | Khi kh√¥ng c√≥ d·ªØ li·ªáu       |
| `SltOfflineStateWidget`      | M·∫•t k·∫øt n·ªëi m·∫°ng           |
| `SltUnauthorizedStateWidget` | Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p    |
| `SltSuccessStateWidget`      | Hi·ªÉn th·ªã th√†nh c√¥ng + action|
| `SltMaintenanceStateWidget`  | Th√¥ng b√°o b·∫£o tr√¨          |
| `SltTimeoutStateWidget`      | Hi·ªÉn th·ªã timeout k·∫øt n·ªëi   |

üìÅ `widgets/states/`

---

## üü™ 2. **Dialog Widgets**

| Class                         | M·ª•c ƒë√≠ch                              |
| ----------------------------- | ------------------------------------- |
| `SltConfirmDialog`            | Dialog x√°c nh·∫≠n (OK/Cancel)           |
| `SltInputDialog`              | Dialog nh·∫≠p vƒÉn b·∫£n                   |
| `SltScoreInputDialogContent`  | Dialog nh·∫≠p ƒëi·ªÉm h·ªçc (Slider + Input) |
| `SltDatePickerDialog`         | Ch·ªçn ng√†y                             |
| `SltTimePickerDialog`         | Ch·ªçn gi·ªù                              |
| `SltAlertDialog`              | Dialog th√¥ng b√°o/c·∫£nh b√°o             |
| `SltFullScreenDialog`         | Dialog to√†n m√†n h√¨nh                  |
| `SltMultiSelectDialog`        | Dialog ch·ªçn nhi·ªÅu m·ª•c                 |
| `SltBottomSheetDialog`        | BottomSheet t√πy ch·ªânh                 |
| `SltProgressDialog`           | Dialog hi·ªÉn th·ªã ti·∫øn tr√¨nh            |

üìÅ `widgets/dialogs/`

---

## üüß 3. **Form Input Widgets**

| Class                    | M·ª•c ƒë√≠ch                        |
| ------------------------ | ------------------------------- |
| `SltTextField`           | Input th∆∞·ªùng                    |
| `SltPasswordTextField`   | Input m·∫≠t kh·∫©u c√≥ n√∫t show/hide |
| `SltDropdown`            | Dropdown ch·ªçn gi√° tr·ªã           |
| `SltCheckboxTile`        | Checkbox d·∫°ng ListTile          |
| `SltRadioGroup`          | Nh√≥m radio buttons              |
| `SltFormSectionTitle`    | Ti√™u ƒë·ªÅ khu v·ª±c nh·∫≠p form       |
| `SltSearchField`         | √î t√¨m ki·∫øm v·ªõi auto-suggest     |
| `SltDatePicker`          | Ch·ªçn ng√†y d·∫°ng input            |
| `SltTimePicker`          | Ch·ªçn gi·ªù d·∫°ng input             |
| `SltSlider`              | Thanh tr∆∞·ª£t v·ªõi label           |
| `SltRangeSlider`         | Thanh tr∆∞·ª£t ch·ªçn kho·∫£ng         |
| `SltMultiSelect`         | Ch·ªçn nhi·ªÅu m·ª•c t·ª´ danh s√°ch     |
| `SltColorPicker`         | Ch·ªçn m√†u s·∫Øc                    |
| `SltOtpInput`            | Nh·∫≠p m√£ OTP                     |
| `SltPhoneInput`          | Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i v·ªõi m√£ qu·ªëc gia|
| `SltRatingInput`         | ƒê√°nh gi√° sao                    |
| `SltFormValidator`       | Widget ki·ªÉm tra l·ªói form        |

üìÅ `widgets/inputs/`

---

## üü® 4. **Button Widgets**

| Class                  | M·ª•c ƒë√≠ch                              |
| ---------------------- | ------------------------------------- |
| `SltPrimaryButton`     | N√∫t ch√≠nh (submit, l∆∞u)               |
| `SltSecondaryButton`   | N√∫t ph·ª• (hu·ª∑, tho√°t)                  |
| `SltIconButton`        | N√∫t icon nh·ªè (th∆∞·ªùng d√πng trong list) |
| `SltTextButton`        | N√∫t vƒÉn b·∫£n kh√¥ng c√≥ background       |
| `SltProgressButton`    | N√∫t c√≥ loading v√≤ng khi ƒëang x·ª≠ l√Ω    |
| `SltOutlinedButton`    | N√∫t vi·ªÅn kh√¥ng c√≥ background          |
| `SltFloatingActionButton` | N√∫t n·ªïi (FAB)                      |
| `SltToggleButton`      | N√∫t chuy·ªÉn ƒë·ªïi tr·∫°ng th√°i             |
| `SltSegmentedButton`   | N√∫t ph√¢n ƒëo·∫°n (ch·ªçn 1 trong nhi·ªÅu)    |
| `SltExpandableButton`  | N√∫t m·ªü r·ªông                           |
| `SltSocialButton`      | N√∫t ƒëƒÉng nh·∫≠p m·∫°ng x√£ h·ªôi             |
| `SltChipButton`        | N√∫t d·∫°ng chip                         |

üìÅ `widgets/buttons/`

---

## üü© 5. **Card & Tile Widgets**

| Class                | M·ª•c ƒë√≠ch                      |
| -------------------- | ----------------------------- |
| `SltCard`            | Card chu·∫©n ho√° padding, shape |
| `SltListCardItem`    | Card item trong danh s√°ch     |
| `SltProgressCard`    | Hi·ªÉn th·ªã ti·∫øn ƒë·ªô h·ªçc          |
| `SltUserCard`        | Hi·ªÉn th·ªã th√¥ng tin ng∆∞·ªùi d√πng |
| `SltExpandableCard`  | Card c√≥ th·ªÉ m·ªü r·ªông           |
| `SltInfoCard`        | Card hi·ªÉn th·ªã th√¥ng tin       |
| `SltActionCard`      | Card v·ªõi c√°c n√∫t h√†nh ƒë·ªông    |
| `SltImageCard`       | Card c√≥ h√¨nh ·∫£nh background   |
| `SltStatCard`        | Card hi·ªÉn th·ªã s·ªë li·ªáu th·ªëng k√™|
| `SltGridTile`        | Tile trong GridView           |
| `SltGradientCard`    | Card v·ªõi gradient background  |
| `SltNotificationCard`| Card th√¥ng b√°o                |

üìÅ `widgets/cards/`

---

## üü´ 6. **List / Table Widgets**

| Class                      | M·ª•c ƒë√≠ch                              |
| -------------------------- | ------------------------------------- |
| `SltPaginatedListView`     | ListView c√≥ lazy loading              |
| `SltSelectableListTile`    | List item c√≥ th·ªÉ ch·ªçn                 |
| `SltResponsiveDataTable`   | Table cho m√†n web/tablet              |
| `SltListSectionHeader`     | Hi·ªÉn th·ªã ti√™u ƒë·ªÅ ph√¢n nh√≥m trong List |
| `SltSwipeableListTile`     | List item c√≥ th·ªÉ vu·ªët ƒë·ªÉ thao t√°c     |
| `SltExpandableListTile`    | List item c√≥ th·ªÉ m·ªü r·ªông              |
| `SltReorderableList`       | List c√≥ th·ªÉ k√©o th·∫£ s·∫Øp x·∫øp l·∫°i       |
| `SltInfiniteGridView`      | GridView c√≥ lazy loading              |
| `SltGroupedListView`       | ListView c√≥ nh√≥m theo section         |
| `SltStickyHeaderList`      | List v·ªõi header c·ªë ƒë·ªãnh khi cu·ªôn      |
| `SltSortableDataTable`     | Table c√≥ th·ªÉ s·∫Øp x·∫øp theo c·ªôt         |
| `SltFilterableList`        | List c√≥ b·ªô l·ªçc t√≠ch h·ª£p               |

üìÅ `widgets/lists/`

---

## üîµ 7. **Filter / Search Widgets**

| Class                  | M·ª•c ƒë√≠ch                          |
| ---------------------- | --------------------------------- |
| `SltFilterBar`         | B·ªô l·ªçc theo ng√†y, tr·∫°ng th√°i      |
| `SltSearchBar`         | T√¨m ki·∫øm t·ª´ kho√°                  |
| `SltFilterChipGroup`   | Nh√≥m filter chip (nhi·ªÅu l·ª±a ch·ªçn) |
| `SltAdvancedFilterPanel` | B·∫£ng l·ªçc n√¢ng cao               |
| `SltDateRangeFilter`   | L·ªçc theo kho·∫£ng th·ªùi gian         |
| `SltCategoryFilter`    | L·ªçc theo danh m·ª•c                 |
| `SltSortSelector`      | Ch·ªçn ti√™u ch√≠ s·∫Øp x·∫øp             |
| `SltSearchSuggestion`  | G·ª£i √Ω t√¨m ki·∫øm                    |
| `SltSearchHistory`     | L·ªãch s·ª≠ t√¨m ki·∫øm                  |
| `SltFilterBottomSheet` | Bottom sheet ch·ª©a b·ªô l·ªçc          |

üìÅ `widgets/filters/`

---

## üü§ 8. **Common Layout Widgets**

| Class                              | M·ª•c ƒë√≠ch                       |
| ---------------------------------- | ------------------------------ |
| `SltAppBar`                        | AppBar t√°i s·ª≠ d·ª•ng             |
| `SltBottomActionBar`               | Thanh n√∫t d∆∞·ªõi c√πng            |
| `SltLearningFooter`                | Footer ri√™ng cho ch·ª©c nƒÉng h·ªçc |
| `SltSectionDivider`                | Divider ti√™u chu·∫©n             |
| `SltScreenHeader`                  | Ti√™u ƒë·ªÅ m√†n h√¨nh c√≥ icon/m√¥ t·∫£ |
| `SltPadding` (widget ho·∫∑c const)   | Padding chu·∫©n t·ª´ `AppDimens`   |
| `SltResponsiveLayout`              | Layout th√≠ch ·ª©ng k√≠ch th∆∞·ªõc m√†n h√¨nh |
| `SltSafeArea`                      | SafeArea t√πy ch·ªânh             |
| `SltScaffold`                      | Scaffold t√πy ch·ªânh             |
| `SltPageWrapper`                   | Wrapper cho trang v·ªõi padding  |
| `SltScrollContainer`               | Container cu·ªôn t√πy ch·ªânh       |
| `SltGridLayout`                    | Layout grid t√πy ch·ªânh          |
| `SltModalBottomSheet`              | Bottom sheet t√πy ch·ªânh         |
| `SltSliver`                        | Sliver widget t√πy ch·ªânh        |
| `SltStatusBar`                     | Thanh tr·∫°ng th√°i t√πy ch·ªânh     |

üìÅ `widgets/common/`

---

## üü£ 9. **Media & Image Widgets**

| Class                    | M·ª•c ƒë√≠ch                                |
| ------------------------ | --------------------------------------- |
| `SltNetworkImage`        | Image c√≥ skeleton loading + error       |
| `SltAvatarImage`         | ·∫¢nh ƒë·∫°i di·ªán (h√¨nh tr√≤n) + fallback     |
| `SltImagePicker`         | Ch·ªçn ·∫£nh t·ª´ th∆∞ vi·ªán/camera            |
| `SltVideoPlayer`         | Ph√°t video v·ªõi controls chu·∫©n           |
| `SltFilePreview`         | Xem tr∆∞·ªõc t√†i li·ªáu (PDF, doc...)       |
| `SltImageViewer`         | Xem ·∫£nh v·ªõi zoom, pan                  |
| `SltImageGallery`        | Th∆∞ vi·ªán ·∫£nh c√≥ th·ªÉ l∆∞·ªõt               |
| `SltMediaUploader`       | Widget upload media                     |
| `SltDocumentViewer`      | Xem t√†i li·ªáu (PDF, DOCX)               |
| `SltAudioPlayer`         | Ph√°t √¢m thanh                          |
| `SltCameraView`          | Hi·ªÉn th·ªã camera                        |
| `SltThumbnail`           | Thumbnail c√≥ placeholder               |
| `SltQrScanner`           | Qu√©t m√£ QR                             |
| `SltCropImageView`       | C·∫Øt ·∫£nh                                |

üìÅ `widgets/media/`

---

## üü† 10. **Navigation & Bottom Bar Widgets**

| Class                      | M·ª•c ƒë√≠ch                              |
| -------------------------- | ------------------------------------- |
| `SltBottomNavBar`          | Bottom navigation v·ªõi badge & icons   |
| `SltTabBar`                | Tab bar t√πy ch·ªânh v·ªõi indicator       |
| `SltNavigationRail`        | Side nav cho tablet/desktop           |
| `SltDrawer`                | Drawer menu t√πy ch·ªânh                 |
| `SltPageIndicator`         | Ch·ªâ b√°o trang (dots, line)            |
| `SltBreadcrumb`            | Breadcrumb navigation                 |
| `SltBottomSheet`           | Bottom sheet t√πy ch·ªânh                |
| `SltNestedTabBar`          | Tab bar l·ªìng nhau                     |
| `SltAppTopBar`             | Top bar v·ªõi actions                   |
| `SltSideMenu`              | Menu b√™n c·∫°nh                         |
| `SltNestedNavigation`      | Navigation l·ªìng nhau                  |
| `SltQuickActionBar`        | Thanh h√†nh ƒë·ªông nhanh                 |

üìÅ `widgets/navigation/`

---

## üî∂ 11. **Animation & Transition Widgets**

| Class                      | M·ª•c ƒë√≠ch                                 |
| -------------------------- | ---------------------------------------- |
| `SltFadeAnimation`         | Hi·ªáu ·ª©ng fade in/out cho widget          |
| `SltSlideTransition`       | Hi·ªáu ·ª©ng slide cho page transition       |
| `SltShimmerLoading`        | Hi·ªáu ·ª©ng shimmer cho skeleton loading    |
| `SltAnimatedCounter`       | S·ªë ƒë·∫øm animation (ƒëi·ªÉm, th√†nh t√≠ch...)   |
| `SltPulseAnimation`        | Hi·ªáu ·ª©ng nh·ªãp ƒë·∫≠p                        |
| `SltBounceAnimation`       | Hi·ªáu ·ª©ng n·∫£y l√™n                         |
| `SltRotationAnimation`     | Hi·ªáu ·ª©ng xoay                            |
| `SltFlipAnimation`         | Hi·ªáu ·ª©ng l·∫≠t                             |
| `SltScaleAnimation`        | Hi·ªáu ·ª©ng ph√≥ng to/thu nh·ªè                |
| `SltTypingAnimation`       | Hi·ªáu ·ª©ng ƒëang nh·∫≠p                       |
| `SltHeroTransition`        | Transition gi·ªØa c√°c m√†n h√¨nh             |
| `SltAnimatedProgressBar`   | Thanh ti·∫øn tr√¨nh c√≥ animation            |
| `SltFlareAnimation`        | T√≠ch h·ª£p animation Flare                 |
| `SltLottieAnimation`       | T√≠ch h·ª£p animation Lottie                |

üìÅ `widgets/animations/`

---

## üü° 12. **Chart & Analytics Widgets**

| Class                      | M·ª•c ƒë√≠ch                                  |
| -------------------------- | ----------------------------------------- |
| `SltBarChart`              | Bi·ªÉu ƒë·ªì c·ªôt v·ªõi animation                 |
| `SltLineChart`             | Bi·ªÉu ƒë·ªì ƒë∆∞·ªùng (h·ªçc t·∫≠p, th√†nh t√≠ch)       |
| `SltPieChart`              | Bi·ªÉu ƒë·ªì tr√≤n (ph√¢n b·ªï th·ªùi gian...)       |
| `SltStatisticCard`         | Card hi·ªÉn th·ªã s·ªë li·ªáu th·ªëng k√™ + bi·ªÉu ƒë·ªì  |
| `SltRadarChart`            | Bi·ªÉu ƒë·ªì radar (k·ªπ nƒÉng)                   |
| `SltProgressChart`         | Bi·ªÉu ƒë·ªì ti·∫øn tr√¨nh                        |
| `SltHistogram`             | Bi·ªÉu ƒë·ªì histogram                         |
| `SltScatterPlot`           | Bi·ªÉu ƒë·ªì ph√¢n t√°n                          |
| `SltStackedBarChart`       | Bi·ªÉu ƒë·ªì c·ªôt ch·ªìng                         |
| `SltAreaChart`             | Bi·ªÉu ƒë·ªì di·ªán t√≠ch                         |
| `SltCandlestickChart`      | Bi·ªÉu ƒë·ªì n·∫øn (t√†i ch√≠nh)                   |
| `SltHeatMap`               | B·∫£n ƒë·ªì nhi·ªát                              |
| `SltBubbleChart`           | Bi·ªÉu ƒë·ªì bong b√≥ng                         |
| `SltGaugeChart`            | Bi·ªÉu ƒë·ªì ƒë·ªìng h·ªì ƒëo                        |
| `SltDataTable`             | B·∫£ng d·ªØ li·ªáu th·ªëng k√™                     |

üìÅ `widgets/charts/`

---

## üî∑ 13. **Permission & Auth Widgets**

| Class                      | M·ª•c ƒë√≠ch                                    |
| -------------------------- | ------------------------------------------- |
| `SltPermissionRequest`     | Widget y√™u c·∫ßu quy·ªÅn (camera, location...)  |
| `SltRoleBasedAccess`       | Widget ·∫©n/hi·ªán theo role ng∆∞·ªùi d√πng         |
| `SltAuthScreen`            | Layout chung cho m√†n h√¨nh ƒëƒÉng nh·∫≠p/ƒëƒÉng k√Ω |
| `SltLoginForm`             | Form ƒëƒÉng nh·∫≠p                              |
| `SltRegisterForm`          | Form ƒëƒÉng k√Ω                                |
| `SltPasswordReset`         | Form ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u                       |
| `SltBiometricAuth`         | X√°c th·ª±c sinh tr·∫Øc h·ªçc                      |
| `SltSocialAuth`            | ƒêƒÉng nh·∫≠p qua m·∫°ng x√£ h·ªôi                   |
| `SltVerificationCode`      | Nh·∫≠p m√£ x√°c th·ª±c                            |
| `SltAuthGuard`             | B·∫£o v·ªá route y√™u c·∫ßu ƒëƒÉng nh·∫≠p              |
| `SltPermissionManager`     | Qu·∫£n l√Ω quy·ªÅn ·ª©ng d·ª•ng                      |
| `SltSecureStorage`         | Widget l√†m vi·ªác v·ªõi secure storage          |

üìÅ `widgets/auth/`

---

## üî¥ 14. **Service Widgets**

| Class                       | M·ª•c ƒë√≠ch                              |
| --------------------------- | ------------------------------------- |
| `SltUiNotifierService`      | Hi·ªÉn th·ªã snackbar/toast               |
| `SltConnectivityService`    | Theo d√µi tr·∫°ng th√°i k·∫øt n·ªëi           |
| `SltDialogService`          | Qu·∫£n l√Ω hi·ªán dialog t·ª´ to√†n c·ª•c       |
| `SltLocalStorageService`    | Qu·∫£n l√Ω l∆∞u tr·ªØ local                 |
| `SltAnalyticsService`       | Theo d√µi s·ª± ki·ªán ng∆∞·ªùi d√πng            |
| `SltThemeService`           | Qu·∫£n l√Ω chuy·ªÉn ƒë·ªïi theme              |
| `SltLocalizationService`    | Qu·∫£n l√Ω ƒëa ng√¥n ng·ªØ                   |
| `SltPushNotificationService`| Qu·∫£n l√Ω th√¥ng b√°o ƒë·∫©y                 |
| `SltNavigationService`      | Qu·∫£n l√Ω navigation to√†n c·ª•c           |
| `SltAuthenticationService`  | Qu·∫£n l√Ω x√°c th·ª±c ng∆∞·ªùi d√πng            |
| `SltCacheService`           | Qu·∫£n l√Ω cache d·ªØ li·ªáu                 |
| `SltDeviceInfoService`      | Th√¥ng tin thi·∫øt b·ªã                    |
| `SltErrorHandlingService`   | X·ª≠ l√Ω l·ªói t·∫≠p trung                   |
| `SltDeepLinkService`        | X·ª≠ l√Ω deep link                       |
| `SltBackgroundTaskService`  | Qu·∫£n l√Ω t√°c v·ª• n·ªÅn                    |
| `SltFileService`            | Qu·∫£n l√Ω file                          |
| `SltLogService`             | Ghi log                               |
| `SltPermissionService`      | Qu·∫£n l√Ω quy·ªÅn                         |

üìÅ `core/services/`

---

## ‚öôÔ∏è 15. **Theme, Constants, Utilities**

| File                                   | M·ª•c ƒë√≠ch                          |
| -------------------------------------- | --------------------------------- |
| `app_colors.dart`                      | To√†n b·ªô m√†u ch·ªß ƒë·ªÅ                |
| `app_dimens.dart`                      | Padding, spacing chu·∫©n            |
| `app_typography.dart`                  | TextStyle ƒë·ªãnh nghƒ©a chung        |
| `app_theme.dart`                       | ThemeData light/dark              |
| `app_strings.dart`                     | Chu·ªói hi·ªÉn th·ªã to√†n app           |
| `app_routes.dart`                      | ƒê·ªãnh tuy·∫øn m√†n h√¨nh               |
| `date_utils.dart`                      | Ti·ªán √≠ch x·ª≠ l√Ω ng√†y th√°ng         |
| `format_utils.dart`                    | Ti·ªán √≠ch ƒë·ªãnh d·∫°ng                |
| `validation_utils.dart`                | Ti·ªán √≠ch ki·ªÉm tra d·ªØ li·ªáu         |
| `device_utils.dart`                    | Ti·ªán √≠ch li√™n quan ƒë·∫øn thi·∫øt b·ªã   |
| `file_utils.dart`                      | Ti·ªán √≠ch x·ª≠ l√Ω file               |
| `string_utils.dart`                    | Ti·ªán √≠ch x·ª≠ l√Ω chu·ªói              |
| `network_utils.dart`                   | Ti·ªán √≠ch m·∫°ng                     |
| `image_utils.dart`                     | Ti·ªán √≠ch x·ª≠ l√Ω ·∫£nh                |
| `app_constants.dart`                   | H·∫±ng s·ªë to√†n ·ª©ng d·ª•ng             |
| `app_assets.dart`                      | ƒê∆∞·ªùng d·∫´n asset                   |
| `app_animations.dart`                  | Animation constant                |
| `app_icons.dart`                       | Icon custom                       |

üìÅ `core/theme/`, `core/utils/`, `core/router/`, `core/constants/`

---

## üß© 16. **Clean Architecture Components**

| Class/File                          | M·ª•c ƒë√≠ch                                 |
| ----------------------------------- | ---------------------------------------- |
| `env_config.dart`                   | C·∫•u h√¨nh m√¥i tr∆∞·ªùng (dev, prod, staging) |
| `dependency_injection.dart`         | Qu·∫£n l√Ω DI theo Clean Architecture       |
| `app_logger.dart`                   | Logging framework chu·∫©n                  |
| `error_handler.dart`                | X·ª≠ l√Ω l·ªói t·∫≠p trung                      |
| `api_client.dart`                   | Client API chu·∫©n                         |
| `base_repository.dart`              | Repository base class                    |
| `base_use_case.dart`                | UseCase base class                       |
| `base_state.dart`                   | State management base                    |
| `result.dart`                       | Result pattern                           |
| `failure.dart`                      | Failure handling                         |
| `interceptors/`                     | HTTP interceptors (auth, log, retry)     |
| `mappers/`                          | Data mappers                             |
| `extensions/`                       | Extension methods                        |

üìÅ `core/config/`, `core/di/`, `core/logging/`, `core/network/`, `core/architecture/`

---

## üß™ 17. **Testing Utilities**

| Class/File                          | M·ª•c ƒë√≠ch                                |
| ----------------------------------- | --------------------------------------- |
| `test_helpers.dart`                 | Helper cho unit test                    |
| `widget_test_utils.dart`            | Utility cho widget test                 |
| `mock_services.dart`                | Mock service cho test                   |
| `test_fixtures.dart`                | D·ªØ li·ªáu m·∫´u cho test                    |
| `integration_test_utils.dart`       | Utility cho integration test            |
| `screen_robot.dart`                 | Robot pattern cho screen test           |
| `golden_test_utils.dart`            | Utility cho golden test                 |

üìÅ `test/helpers/`, `test/fixtures/`, `test/robots/`

---

## ‚úÖ K·∫øt lu·∫≠n

* üìå **M·ªçi widget ph·∫£i d√πng prefix `Slt`** v√† chia r√µ theo folder ch·ª©c nƒÉng
* üìå ƒê·∫£m b·∫£o t√°i s·ª≠ d·ª•ng 100% UI logic tr√™n to√†n app
* üìå K·∫øt h·ª£p v·ªõi `AppDimens`, `AppColors`, `AppTypography` ƒë·ªÉ gi·ªØ **ƒë·ªìng b·ªô UI**
* üìå D·ªÖ m·ªü r·ªông ra package n·ªôi b·ªô n·∫øu c·∫ßn chia s·∫ª gi·ªØa c√°c app kh√°c nhau
* üìå Ph√π h·ª£p v·ªõi Clean Architecture, Design Patterns v√† nguy√™n t·∫Øc SOLID
* üìå H·ªó tr·ª£ testing hi·ªáu qu·∫£ v·ªõi c√°c ti·ªán √≠ch ki·ªÉm th·ª≠ ƒëi k√®m

## üõ†Ô∏è Quy ∆∞·ªõc ph√°t tri·ªÉn

1. **Return s·ªõm, kh√¥ng d√πng else:**
   ```dart
   Widget build(BuildContext context) {
     if (isLoading) return SltLoadingStateWidget();
     if (error != null) return SltErrorStateWidget(error: error);
     if (data.isEmpty) return SltEmptyStateWidget();
     
     return ListView.builder(...);
   }
   ```

2. **Factory Pattern cho widget ph·ª©c t·∫°p:**
   ```dart
   factory SltButton.primary({...}) => SltPrimaryButton(...);
   factory SltButton.secondary({...}) => SltSecondaryButton(...);
   ```

3. **Builder Pattern cho widget nhi·ªÅu tham s·ªë:**
   ```dart
   SltCard(
     title: "Title",
     content: "Content",
   ).withElevation(2.0).withRoundedCorners().withPadding();
   ```

4. **Single Responsibility cho t·ª´ng widget:**
   - M·ªói widget ch·ªâ n√™n ph·ª•c v·ª• m·ªôt m·ª•c ƒë√≠ch duy nh·∫•t
   - Chia nh·ªè widget ph·ª©c t·∫°p th√†nh c√°c widget con

5. **Dependency Injection:**
   - S·ª≠ d·ª•ng DI ƒë·ªÉ ti√™m c√°c dependency v√†o widget
   - T√°ch bi·ªát logic business v√† presentation layer